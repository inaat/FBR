name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        php: [8.0, 8.1, 8.2, 8.3]
        laravel: [9.*, 10.*, 11.*, 12.*]
        stability: [prefer-stable]
        exclude:
          - laravel: 12.*
            php: 8.0
          - laravel: 11.*
            php: 8.0

    name: P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests (Unit and Feature tests)
        run: vendor/bin/phpunit --testdox

  analysis:
    runs-on: ubuntu-latest
    name: Static Analysis

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: composer update --prefer-stable --prefer-dist --no-interaction

      - name: Run Laravel Pint
        run: vendor/bin/pint --test

  api-test:
    runs-on: ubuntu-latest
    name: FBR API Integration Test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: composer update --prefer-stable --prefer-dist --no-interaction

      - name: Test FBR Reference APIs
        run: php tests/test-simple-package.php
        env:
          FBR_BEARER_TOKEN: ${{ secrets.FBR_BEARER_TOKEN }}
          FBR_WORKING_NTN: ${{ secrets.FBR_WORKING_NTN }}

      - name: Test Package Installation
        run: |
          mkdir test-install
          cd test-install
          composer init --no-interaction --name="test/install"
          composer require fbr/digital-invoicing:dev-main
          echo "<?php require 'vendor/autoload.php'; echo 'Package installed successfully!' . PHP_EOL;" > test.php
          php test.php